# # Reference from:
# https://www.aquasec.com/blog/devsecops-with-trivy-github-actions/

# Name of the security step
name: Step 3 - Image Scan

# Environment variables
env:
  IMAGE_NAME: tfm-app:latest
  TRIVY_SEVERITY: CRITICAL,HIGH
  TRIVY_VULN_TYPE: os,library
  TRIVY_OUTPUT: imagescan-trivy-results.sarif

# When is it going to activate
on:
  # On demand
  workflow_call:
  # And when the father calls
  workflow_dispatch:

# Permissions
permissions:
  contents: read
  security-events: write

# What is going to do
jobs:
  # Name of the job
  trivy-scan:
    # Machine of GitHub - Microsoft where the job will be executed
    runs-on: ubuntu-latest
    # Steps:
    #  1. Download repo on the VM
    #  2. Build docker
    #  3. Scan the docker with trivy
    #  4. Export to Code Scanning Alerts
    steps:
      #  1. Download repo on the VM
      - name: Checkout repo
        uses: actions/checkout@v4
      #  2. Build docker
      - name: Build Docker image
        run: docker build -t ${{ env.IMAGE_NAME }} -f src/docker/Dockerfile .
      #  3. Scan the docker with trivy
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ env.IMAGE_NAME }}
      #    vuln-type: ${{ env.TRIVY_VULN_TYPE }}
      #    severity: ${{ env.TRIVY_SEVERITY }}
          format: 'sarif'
          output: '${{ env.TRIVY_OUTPUT }}'
      #    exit-code: 1
      #  4. Export to Code Scanning Alerts
      - name: Export to Code Scanning Alerts
        uses: github/codeql-action/upload-sarif@v3
        with:
          category: security
          output: '${{ env.TRIVY_OUTPUT }}'